#!/usr/bin/env bash

# Concatenate the contents of variables.tf and variables-common.tf into a single file
if [ -f variables.tf ]; then cp variables.tf all-variables.tf; fi
if [ -f variables-common.tf ]; then cat variables-common.tf >>all-variables.tf; fi

# Parse the all-variables.tf file and extract the variable names and descriptions
mapfile -t variable_names < <(sed -n 's/^.*variable "\(.*\)".*$/\1/p' all-variables.tf)
mapfile -t variable_descs < <(sed -n 's/^.*description *= *"\(.*\)".*$/\1/p' all-variables.tf)

# Create the terraform.tfvars file if it doesn't exist else, clean it
if [ ! -f terraform.tfvars ]; then
    touch terraform.tfvars
else
    >terraform.tfvars
fi

# Loop through each variable and prompt the user for a value
for i in "${!variable_names[@]}"; do
    var_name=${variable_names[i]}
    var_desc=${variable_descs[i]}

    # Extract the default value for the current variable (if available)
    var_default=$(sed -n "/variable \"$var_name\"/,/^}/p" all-variables.tf | grep "default" | sed -E 's/^.*default *= *"?([^"]*)"?.*$/\1/')

    if [ "$var_name" == "argocd_password" ]; then
        read -p "ArgoCD password : " argocd_password
        while [ -z "$argocd_password" ]; do
            read -p "You have to specify a value for \"argocd_password\": " argocd_password
        done
        DOCKER_USER="$(id -u):$(id -g)" \
        argocd_password_hashed="$(docker-compose run --quiet-pull --rm argocd-cli argocd account bcrypt --password $argocd_password)"

        echo $argocd_password_hashed
        echo "argocd_password=\"$argocd_password_hashed\"" >>terraform.tfvars
        continue
    fi

    # If a default value is available, display it to the user
    if [ -n "$var_default" ]; then
        read -p "$var_desc (default \"$var_default\", leave blank): " var_value

        # If the user entered nothing, use the default value
        if [ -z "$var_value" ]; then
            var_value="$var_default"
        fi
    else
        # Prompt the user for a value
        read -p "$var_desc: " var_value

        # If the user entered nothing and there is no default value, prompt again
        while [ -z "$var_value" ]; do
            read -p "You have to specify a value for \"$var_name\": " var_value
        done
    fi

    # Store the variable name and value in the terraform.tfvars file
    echo "$var_name=\"$var_value\"" >>terraform.tfvars
done

# Remove the all-variables.tf file
rm all-variables.tf
