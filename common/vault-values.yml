global:
  enabled: true
  tlsDisable: false

server:
  dataStorage:
      size: ${vault_data_storage_size}Gi
  affinity: ""
  ha:
    enabled: true
    raft: 
      enabled: true
      setNodeId: true
      config: |
        ui = ${vault_ui}

        listener "tcp" {
          address = "[::]:8200"
          cluster_address = "[::]:8201"

          tls_disable = false
          tls_cert_file = "/vault/userconfig/${kubernetes_secret_name_tls_cert}/tls.crt"
          tls_key_file  = "/vault/userconfig/${kubernetes_secret_name_tls_cert}/tls.key"

          tls_require_and_verify_client_cert = false
          tls_disable_client_certs           = true
        }

        storage "raft" {
          path    = "/vault/data"

          retry_join {
            auto_join             = "provider=k8s namespace=hashicorp-vault label_selector=\"component=server,app.kubernetes.io/name=vault\""
            %{ if vault_leader_tls_servername != null }
            leader_tls_servername = "${vault_leader_tls_servername}"
            %{ else }
            leader_tls_servername = "HOSTNAME.hashicorp-vault-internal"
            %{ endif }
            leader_ca_cert_file   = "/vault/userconfig/${kubernetes_secret_name_tls_ca}/ca.crt"
          }
        }

        service_registration "kubernetes" {}

        seal "${vault_seal_method}" {}
  ui:
    enabled: ${vault_ui}
    serviceType: ${kubernetes_vault_ui_service_type}
  %{ if enable_vault_server_ingress }
  ingress:
    enabled: true
    activeService: true
    ingressClassName: nginx
    annotations:
      cert-manager.io/cluster-issuer: ${cluster_issuer_name}
      nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    tls:
      - hosts:
        - ${vault_server_hostname}
        secretName: ${vault_server_hostname}
    hosts:
      - host: ${vault_server_hostname}
  %{ endif }
  affinity: |
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 1
        podAffinityTerm:
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: vault
              app.kubernetes.io/instance: hashicorp-vault
              component: server
          topologyKey: kubernetes.io/hostname
  extraVolumes:
      - type: secret
        name: ${kubernetes_secret_name_tls_cert}
      - type: secret
        name: ${kubernetes_secret_name_tls_ca}
  extraEnvironmentVars:
    VAULT_CAPATH: /vault/userconfig/tls-ca/ca.crt
    VAULT_SKIP_VERIFY: true