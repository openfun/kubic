---
crds:
  keep: false

server:
  ingress:
    enabled: true
    https: true
    annotations:
      cert-manager.io/cluster-issuer: ${cluster_issuer_name}
      nginx.ingress.kubernetes.io/ssl-passthrough: true
      nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    ingressClassName: nginx
    hosts:
      - ${host_name}
    tls:
      - hosts:
          - ${host_name}
        secretName: argocd-secret # do not change, this is provided by Argo CD

repoServer:
  # Each of the embedded YAMLs inside argocd-cmp-cm ConfigMap will be mounted into it's respective plugin sidecar
  volumes:
    - configMap:
        name: argocd-cmp-cm
      name: argocd-cmp-cm
    - name: custom-tools
      emptyDir: {}

  # Download tools
  initContainers:
    - name: download-tools
      image: registry.access.redhat.com/ubi8
      env:
        - name: AVP_VERSION
          value: ${avp_version}
      command: [sh, -c]
      args:
        - >-
          curl -L https://github.com/argoproj-labs/argocd-vault-plugin/releases/download/v$(AVP_VERSION)/argocd-vault-plugin_$(AVP_VERSION)_linux_amd64 -o argocd-vault-plugin &&
          chmod +x argocd-vault-plugin &&
          mv argocd-vault-plugin /custom-tools/

      volumeMounts:
        - mountPath: /custom-tools
          name: custom-tools

  extraContainers:
    # argocd-vault-plugin with plain YAML
    - name: avp
      command: [/var/run/argocd/argocd-cmp-server]
      image: quay.io/argoproj/argocd:{{ .Chart.AppVersion }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
      volumeMounts:
        - mountPath: /var/run/argocd
          name: var-files
        - mountPath: /home/argocd/cmp-server/plugins
          name: plugins
        - mountPath: /tmp
          name: tmp

        # Register plugins into sidecar
        - mountPath: /home/argocd/cmp-server/config/plugin.yaml
          subPath: avp.yaml
          name: argocd-cmp-cm

        # Important: Mount tools into $PATH
        - name: custom-tools
          subPath: argocd-vault-plugin
          mountPath: /usr/local/bin/argocd-vault-plugin

    # argocd-vault-plugin with Helm
    - name: avp-helm
      command: [/var/run/argocd/argocd-cmp-server]
      image: quay.io/argoproj/argocd:{{ .Chart.AppVersion }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
      volumeMounts:
        - mountPath: /var/run/argocd
          name: var-files
        - mountPath: /home/argocd/cmp-server/plugins
          name: plugins
        - mountPath: /tmp
          name: tmp

        # Register plugins into sidecar
        - mountPath: /home/argocd/cmp-server/config/plugin.yaml
          subPath: avp-helm.yaml
          name: argocd-cmp-cm

        # Important: Mount tools into $PATH
        - name: custom-tools
          subPath: argocd-vault-plugin
          mountPath: /usr/local/bin/argocd-vault-plugin

    # argocd-vault-plugin with Kustomize
    - name: avp-kustomize
      command: [/var/run/argocd/argocd-cmp-server]
      image: quay.io/argoproj/argocd:{{ .Chart.AppVersion }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
      volumeMounts:
        - mountPath: /var/run/argocd
          name: var-files
        - mountPath: /home/argocd/cmp-server/plugins
          name: plugins
        - mountPath: /tmp
          name: tmp

        # Register plugins into sidecar
        - mountPath: /home/argocd/cmp-server/config/plugin.yaml
          subPath: avp-kustomize.yaml
          name: argocd-cmp-cm

        # Important: Mount tools into $PATH
        - name: custom-tools
          subPath: argocd-vault-plugin
          mountPath: /usr/local/bin/argocd-vault-plugin

configs:
  secret:
    argocdServerAdminPassword: ${password}
  repositories:
    applications-repo:
      name: applications-repo
      type: git
      url: ${repo_url}
      username: ${repo_username}
      password: ${repo_password}
  cmp:
    create: true
    plugins:
      avp:
        allowConcurrency: true
        discover:
          find:
            command:
              - sh
              - "-c"
              - "find . -name '*.yaml' | xargs -I {} grep \"<path\\|avp\\.kubernetes\\.io\" {} | grep ."
        generate:
          command:
            - argocd-vault-plugin
            - generate
            - "."
            - "-s $${ARGOCD_ENV_AVP_SECRET}"
        lockRepo: false

      avp-helm:
        allowConcurrency: true

        # Note: this command is run _before_ any Helm templating is done, therefore the logic is to check
        # if this looks like a Helm chart
        discover:
          find:
            command:
              - sh
              - "-c"
              - "find . -name 'Chart.yaml' && find . -name 'values.yaml'"
        init:
          command:
            - sh
            - "-c"
            - helm dependency update
        generate:
          command:
            - sh
            - "-c"
            - |
              helm template $ARGOCD_APP_NAME -n $ARGOCD_APP_NAMESPACE $${ARGOCD_ENV_HELM_ARGS} --include-crds . |
              argocd-vault-plugin generate - -s $${ARGOCD_ENV_AVP_SECRET}
        lockRepo: false

      avp-kustomize:
        allowConcurrency: true

        # Note: this command is run _before_ anything is done, therefore the logic is to check
        # if this looks like a Kustomize bundle
        discover:
          find:
            command:
              - find
              - "."
              - -name
              - kustomization.yaml
        generate:
          command:
            - sh
            - "-c"
            - "kustomize build . | argocd-vault-plugin generate - -s $${ARGOCD_ENV_AVP_SECRET}"
        lockRepo: false

extraObjects:
  - apiVersion: v1
    kind: Secret
    metadata:
      name: default-vault-credentials
      namespace: argocd
    type: Opaque
    stringData:
      VAULT_ADDR: https://${vault_addr}
      AVP_TYPE: vault
      AVP_AUTH_TYPE: k8s
      AVP_K8S_ROLE: argocd
